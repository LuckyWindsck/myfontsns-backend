import type { RequestHandler } from 'express';
import type * as JSONAPI from 'jsonapi-typescript';

// res.send can be object while res.json is string generated by JSON.stringify
const convertBody = (rawBody: object | string) => {
  const body = typeof rawBody === 'string' ? JSON.parse(rawBody) : rawBody;

  const response: JSONAPI.Document = {
    jsonapi: {
      version: '1.0',
    },
    ...body,
  };

  return response;
};

const JSONAPIResponseInterceptor: RequestHandler = (req, res, next) => {
  const originalSend = res.send.bind(res);

  res.send = (body) => originalSend(JSON.stringify(convertBody(body)));
  res.set('Content-Type', 'application/json; charset=utf-8');

  next();
};

const docWithData = (data: JSONAPI.PrimaryData) => {
  const document: JSONAPI.DocWithData = { data };

  return document;
};

const docWithErrors = (...errors: JSONAPI.Errors) => {
  const document: JSONAPI.DocWithErrors = { errors };

  return document;
};

export {
  JSONAPIResponseInterceptor,
  docWithData,
  docWithErrors,
};
