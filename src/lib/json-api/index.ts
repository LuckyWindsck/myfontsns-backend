import type { RequestHandler } from 'express';
import type * as JSONAPI from 'jsonapi-typescript';

const JSONAPIResponseInterceptor: RequestHandler = (req, res, next) => {
  const originalSend = res.send.bind(res);

  res.send = (body) => {
    // res.send can be object, while res.json is string generated by JSON.stringify
    const document = typeof body === 'string' ? JSON.parse(body) : body;

    const response: JSONAPI.Document = {
      jsonapi: {
        version: '1.0',
      },
      ...document,
    };

    return originalSend(JSON.stringify(response));
  };
  res.set('Content-Type', 'application/json; charset=utf-8');

  next();
};

const docWithData = (data: JSONAPI.PrimaryData) => {
  const document: JSONAPI.DocWithData = { data };

  return document;
};

const docWithErrors = (...errors: JSONAPI.Errors) => {
  const document: JSONAPI.DocWithErrors = { errors };

  return document;
};

export {
  JSONAPIResponseInterceptor,
  docWithData,
  docWithErrors,
};
